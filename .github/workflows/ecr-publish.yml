name: Build and Push to Amazon ECR

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  AWS_REGION: ap-south-1               # change if you use another region
  ECR_REPOSITORY: spring-petclinic    # repository name in ECR (create if absent)

jobs:
  docker:
    name: Docker build & push to ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write         # for OIDC to assume AWS role
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE_ARN }}
          role-session-name: petclinicBuildSession

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names ${ECR_REPOSITORY} >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name ${ECR_REPOSITORY} >/dev/null

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag

      - name: Build and push (multi-arch) to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          build-args: |
            GIT_TAG=${{ github.ref_type == 'tag' && github.ref_name || github.sha }}

      - name: Output pushed image references
        run: |
          echo "Image(s): ${{ steps.meta.outputs.tags }}"
